version: "3.9"
networks:
  budgetis:
    external: false

services:
  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    entrypoint: [ "/app/docker/entrypoint.sh" ]
    volumes:
      - ./budgetis:/app/budgetis
      - ./config:/app/config
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    depends_on:
      - db
      - redis
    networks:
      - budgetis

  celery:
    build:
      context: .
      dockerfile: docker/celery.Dockerfile
    command: celery -A config.celery_app worker -l info
    volumes:
      - ./budgetis:/app/budgetis
      - ./config:/app/config
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    depends_on:
      - db
      - redis
    networks:
      - budgetis

  celery-beat:
    build:
      context: .
      dockerfile: docker/celery.Dockerfile
    command: celery -A config.celery_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./budgetis:/app/budgetis
      - ./config:/app/config
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - POSTGRES_DB=budgetis
      - POSTGRES_USER= budgetis
    depends_on:
      - db
      - redis
    networks:
      - budgetis

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: budgetis
      POSTGRES_USER: budgetis
      POSTGRES_PASSWORD: changeme
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - budgetis

  redis:
    image: redis:7
    networks:
      - budgetis

volumes:
  postgres_data:
